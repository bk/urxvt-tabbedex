#!/bin/sh
: <<'=cut'

=head1 NAME

command-runner.sample - example script for use with tabbedex tab-arguments

=head1 SYNOPSIS

command-runner.sample I<id> I<command> [ I<args> ... ]

=head1 DESCRIPTION

Runs one of predefined commands (if I<id> matches any known identifier) or one
specified as an argument.  Predefined commands are hard-coded in the source code
of this script.

=head1 OPTIONS

=over

=item I<id>

Identifier of a predefined command to run.  Typically a zero-indexed integer but
it actually can be whatever.

=item I<command> [ I<args> ... ]

Command to execute if I<id> does not match any know predefined commands.

=back

=head1 TABBEDEX

The script was designed to work with tabbedex urxvt plugin.  It can be used to
execute different commands in subsequent tabs.  To use it, copy it and change
list of commands at the end of the script.  For example, if urxvt-tabbedex is
installed to B</usr/lib/urxvt>, the following steps are a good start:

    mkdir -p ~/.urxvt
    cp /usr/lib/urxvt/tabbedex-command-runner.sample \
       ~/.urxvt/command-runner.sh
    ${VISUAL:-${EDITOR:-/bin/vi}} ~/.urxvt/command-runner.sh

Finally, configure B<tab-arguments> resource, for example:

    URxvt.tabbedex.tab-arguments: \
        -e /bin/sh %~/.urxvt/command-runner.sh %n %E

With this done, each time new tab is started, this script will be run so that it
can decide what actual command is executed in the tab.

To use this script with B<pgid-cd.pl> the resource becomes:

    URxvt.tabbedex.tab-arguments: \
        -e /usr/lib/urxvt/tabbadex-pgid-cd %p \
        /bin/sh %~/.urxvt/command-runner.pl %n %e

=head1 SEE ALSO

L<urxvt-tabbed(1)> and L<tabbedex-pgid-cd(1)>

=cut

trap 'echo "Press RETURN to continue." >&2 && read && exit 1' 0
if [ $# -lt 2 ]; then
	echo "usage: /bin/sh ${0##*/} <id> <command> [ <args> ... ]" >&2
	exit 1
fi

id=$1
shift

#### Predefined commands ####

case $id in
0) # First tab is shell
	exec "${SHELL:-bash}"
	;;
1) # Second tab is Emacs
	exec emacs -nw
	;;
2) # In third, letâ€™s tail /var/log/syslog
	exec tail -f /var/log/syslog
	;;
*) # If nothing matches, run whatever was given as an argument
	exec "$@"
esac
